<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.checkin.mapper.HistoryLoginMapper">
    <select id="listHistoryLogin" resultType="com.checkin.dto.response.HistoryLoginResponse">
        SELECT
        lm.employee_code,
        u.fullname,
        d.name AS department_name,
        un.name AS unit_name,
        lm.login_time,
        lm.date
        FROM
        login_management lm
        JOIN
        users u ON lm.employee_code = u.employee_code
        LEFT JOIN
        department d ON u.department_code = d.code
        LEFT JOIN
        unit un ON u.unit_code = un.code
        <where>
            (lm.employee_code, lm.login_time) IN (
            SELECT
            employee_code,
            MAX(login_time) AS latest_login_time
            FROM
            login_management
            GROUP BY
            employee_code, date
            )
        <if test="keyword != null and keyword != ''">
            AND (
            LOWER(u.fullname) LIKE CONCAT('%', LOWER(#{keyword}), '%')
            OR u.email LIKE CONCAT('%', #{keyword}, '%')
            OR u.employee_code LIKE CONCAT('%', #{keyword}, '%')
            )
        </if>
        <if test="departmentCode != null and departmentCode != ''">
            AND u.department_code = #{departmentCode}
        </if>
        <if test="genderId != null and genderId != ''">
            AND u.gender_id = #{genderId}
        </if>
        <if test="statusId != null and statusId != ''">
            AND u.status_id = #{statusId}
        </if>
    </where>
        <if test="limit > 0">
            OFFSET (#{page} - 1) * #{limit} FETCH NEXT #{limit} ROWS ONLY
        </if>
        order by date desc
    </select>
    <select id="listHistoryLoginDetail" resultType="com.checkin.dto.response.HistoryLoginResponse">

        SELECT
            u.employee_code,
            g.name AS gender,
            u.fullname,
            j.name AS job_title_name,
            d.name AS department_name,
            un.name AS unit_name,
            lm.login_time,
            lm.date
        FROM
            users u
                JOIN
            gender g ON u.gender_id = g.id
                LEFT JOIN
            job_title j ON u.job_title_code = j.code
                LEFT JOIN
            department d ON u.department_code = d.code
                LEFT JOIN
            unit un ON u.unit_code = un.code
                LEFT JOIN
            login_management lm ON u.employee_code = lm.employee_code
        WHERE
            u.employee_code = #{employeeCode}
        and lm.date = #{date} order by lm.date desc, lm.login_time desc
    </select>

</mapper>